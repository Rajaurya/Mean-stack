{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Service/tasks.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/tasks/task-add.component.html","webpack:///./src/app/tasks/task.model.component.html","webpack:///./src/app/tasks/task-add.component.ts","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {HttpClient} from '@angular/common/http';\nimport {TaskModel} from './../tasks';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TasksService {\n\n  constructor(private _http:HttpClient) { }\n  get Tasks(): Observable<TaskModel[]>{\n    return this. _http.get<TaskModel[]>('http://localhost:7008/api/task');\n  }\n  changeStatus(task: TaskModel):Observable<any>{\n   task.isCompleted = task.isCompleted === true ? false:true;\n   console.log(task) ;\n   return this._http.put<any>(\n     `http://localhost:7008/api/task/${task._id}`,\n    task\n    );\n  }\n  AddTask(task:TaskModel):Observable<any>{\n    return this._http.post('http://localhost:7008/api/task',task)\n  }\n  delTask(id):Observable<any>{\n    return this._http.delete(`http://localhost:7008/api/task/${id}`)\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n  <img width=\"250\"  src=\"https://lh3.googleusercontent.com/9-0ogHkF0LL8fyfVsi1KAiz6u02OdzIIPb5hASiUmrPew2KmQEcnkb8L6kej43gsXx3x\">\n</div>\n<h1>App.component.html</h1>\n<app-tasks></app-tasks>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Todo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TasksComponent } from './tasks/tasks.component';\nimport { MatTableModule,MatPaginatorModule,MatSlideToggleModule,MatSnackBarModule,MatDialogModule, MatFormFieldModule, MatButtonModule, MatInputModule, MatIconModule, MatSortModule} from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TasksService} from './Service/tasks.service';\nimport { TaskAddComponent, TaskOpendialog } from './tasks/task-add.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TasksComponent,\n    TaskAddComponent,\n    TaskOpendialog\n  ],\n  entryComponents:[TaskOpendialog],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatTableModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule,\n    MatSlideToggleModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatSortModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  providers: [TasksService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","   <button mat-raised-button (click)=\"openDialog()\" color=\"accent\">Add Task</button>\n","<h1 mat-dialog-title>Add new Task</h1>\n<div mat-dialog-content>\n  <p>Add Title of Your Task</p>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"data.title\" name=\"title\" #title=\"ngModel\" placeholder=\"Enter Your Title\" required minlength=\"5\" cdkFocusInitial>\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No Thanks</button>\n  <button mat-button (click)=\"onAddTask(data)\"[disabled]=\"title.invalid\">Add Task</button>\n</div>","import { Component, OnInit,Inject ,Output,EventEmitter} from '@angular/core';\nimport { TaskModel} from './../tasks';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA,MatSnackBar} from '@angular/material';\nimport { TasksService } from './../Service/tasks.service'; \n@Component({\n  selector: 'app-task-add',\n  templateUrl: './task-add.component.html',\n  styleUrls: ['./task-add.component.css']\n})\nexport class TaskAddComponent implements OnInit {\n  @Output() AddTaskEvent = new EventEmitter<boolean>();\n  title:string;\n  constructor(public dialog: MatDialog) {}\n  openDialog(): void {\n    const dialogRef = this.dialog.open(TaskOpendialog, {\n      width: '250px',\n      data: {title: this.title}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(result === true){\n        this.AddTaskEvent.emit(true);\n      }\n      console.log('The dialog was closed');\n      \n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n@Component({\n  selector: 'app-task-model',\n  templateUrl: 'task.model.component.html',\n})\nexport class TaskOpendialog {\n  message:any;\n  constructor(\n    public dialogRef: MatDialogRef<TaskOpendialog>,\n    @Inject(MAT_DIALOG_DATA) public data: TaskModel, public tasksServices: TasksService,public snackbar: MatSnackBar) {}\n    \n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n onAddTask(task:any){\n   this.tasksServices.AddTask(task).subscribe(message=>{\n    this.snackbar.open(message.message,\"Dismiss\",{\n      duration:2000\n    });\n    this.dialogRef.close(true);\n   });\n }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"class\">\n        <div class=\"mat-elevation-z8\">\n      <div class=\"formgroup\">\n          <app-task-add (AddTaskEvent)=\"TaskAdded($event)\"></app-task-add>\n      </div>\n      <div class=\"formgroup\">\n          <mat-form-field>\n              <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n            </mat-form-field>\n      </div>\n        <table  mat-table [dataSource]=\"dataSource\" matSort>\n      \n          <!-- Position Column -->\n           <ng-container matColumnDef=\"_id\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> ID. </th>\n            <td mat-cell *matCellDef=\"let element\"> ID </td>\n          </ng-container> \n      \n          <!-- Name Column -->\n          <ng-container matColumnDef=\"title\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Title </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.title }} </td>  \n          </ng-container>\n      \n          <!-- Weight Column -->\n          <ng-container matColumnDef=\"isCompleted\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\n            <td mat-cell *matCellDef=\"let element\"> \n              <mat-slide-toggle (change)=\"updateTask(element)\" [checked]=\"element.isCompleted\">{{element.isCompleted}}</mat-slide-toggle> </td>\n          </ng-container>\n\n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"created_at\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Create </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.created_at| date}} </td>\n          </ng-container>\n      \n      \n          <!-- Symbol Column -->\n          <ng-container matColumnDef=\"updated_at\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Updated </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.updated_at | date}} </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"action\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n            <td mat-cell *matCellDef=\"let element\"><button mat-raised-button color=\"accent\" (click)=\"deleteTask(element._id)\"> \n              <mat-icon>clear</mat-icon>\n            </button></td>\n          </ng-container>\n      \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      \n        <mat-paginator [pageSizeOptions]=\"[16,20,25]\" showFirstLastButtons></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import {TaskModel} from './../tasks';\nimport {TasksService} from './../Service/tasks.service';\nimport {Component, OnInit ,ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource,MatSnackBar,MatSort} from '@angular/material';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  displayedColumns: string[] = ['_id','title', 'isCompleted', 'created_at', 'updated_at', 'action'];\n  dataSource :MatTableDataSource<TaskModel>;\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort:MatSort;\n  message:any;\n  constructor(private taskService:TasksService,public snackbar:MatSnackBar) { }\n\n  ngOnInit() { \n   \n    this. AlltasksList(); }\n\n  AlltasksList(){\n    this.taskService.Tasks.subscribe(tasks =>{\n      if(!tasks){return;}\n      this.dataSource = new MatTableDataSource<TaskModel>(tasks);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n  updateTask(task: any){\n    this.taskService\n    .changeStatus(task)\n    .subscribe(message=>{\n      this.snackbar.open(message.message,\"Dismiss\",{\n        duration:2000\n      })\n    })\n  }\n  deleteTask(id){\n    const check = confirm('Yes I Am Sure');\n    if(check === true){\n      return this.taskService.delTask(id)\n    .subscribe(message=>{\n      this.snackbar.open(message.message,\"Dismiss\",{\n        duration:2000\n      })\n      this.AlltasksList()\n    })\n    }\n    return;\n  }\n  TaskAdded(e: boolean){\n    if(e===true){\nthis. AlltasksList()\n    }\n  }\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}